{
  "name": "streamingapp-monorepo",
  "version": "1.0.0",
  "description": "Plataforma integral de streaming con backend Node.js, frontend React+Vite y Storybook",
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/KikeTorillo/streamingApp.git"
  },
  "author": "Kike Torillo <arellanestorillo@yahoo.com>",
  "license": "ISC",
  "workspaces": [
    "backend/app",
    "frontend/app"
  ],
  "scripts": {
    "// === 🏠 DESARROLLO LOCALHOST ===": "",
    "dev:local": "docker compose -f docker-compose.local.yml down --volumes --remove-orphans && docker compose -f docker-compose.local.yml up -d --build",
    "dev:local:up": "docker compose -f docker-compose.local.yml up -d --build",
    "dev:local:logs": "docker compose -f docker-compose.local.yml logs -f",
    "dev:local:status": "docker compose -f docker-compose.local.yml ps",
    "dev:local:restart": "npm run stop:local && npm run dev:local:up",
     
    "// === 🚀 PRODUCCIÓN ===": "",
    "prod": "docker compose -f docker-compose.yml up -d --build",
    "prod:up": "docker compose -f docker-compose.yml up -d --build",
    "prod:logs": "docker compose -f docker-compose.yml logs -f",
    "prod:status": "docker compose -f docker-compose.yml ps",
    "prod:restart": "npm run stop:prod && npm run prod:up",
    
    "// === 📋 COMPATIBILIDAD (mantiene comando original) ===": "",
    "dev": "echo '⚠️  Usa comandos específicos: dev:local o dev:host' && npm run dev:host",
    
    "// === 🔧 BUILD Y DEPENDENCIAS ===": "",
    "build": "cd frontend/app && npm run build",
    "install:all": "npm install && cd backend/app && npm install && cd ../.. && cd frontend/app && npm install",
    
    "// === 🧪 CALIDAD DE CÓDIGO ===": "",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend/app && npm run lint",
    "lint:frontend": "cd frontend/app && npm run lint",
    "lint:fix": "npm run lint:fix:backend && npm run lint:fix:frontend",
    "lint:fix:backend": "cd backend/app && npm run lint -- --fix || true",
    "lint:fix:frontend": "cd frontend/app && npm run lint -- --fix || true",
    
    "// === 🛠️ UTILIDADES ===": "",
    "status": "docker ps --format 'table {{.Names}}\\t{{.Status}}\\t{{.Ports}}'",
    "health": "docker ps && docker system df -v",
    "ports": "netstat -tulpn | grep -E ':(3000|8080|6006|5432|9000|9001|8082)'",
    "env:setup": "echo '🎯 Selecciona tu configuración:' && echo '🏠 Localhost: cp .env.local.example .env' && echo '🌐 Red Local: cp .env.host.example .env' && echo '🚀 Producción: cp .env.prod.example .env'",
    
    "// === 🔍 DEBUG Y ACCESO A CONTENEDORES ===": "",
    "logs:backend": "docker logs -f back",
    "logs:frontend": "docker logs -f front", 
    "logs:storybook": "docker logs -f storybook",
    "logs:database": "docker logs -f postgres",
    "shell:backend": "docker exec -it back /bin/bash",
    "shell:frontend": "docker exec -it front /bin/sh",
    "shell:storybook": "docker exec -it storybook /bin/sh",
    "shell:db": "docker exec -it postgres psql -U admin -d streamingApp",
    
    "// === 🛑 CONTROL Y LIMPIEZA ===": "",
    "stop": "docker compose down",
    "stop:local": "docker compose -f docker-compose.local.yml down",
    "stop:host": "docker compose -f docker-compose.host.yml down",
    "stop:prod": "docker compose -f docker-compose.yml down",
    "clean": "node clean.js",
    "clean:full": "npm run clean && docker image prune -af && docker volume prune -f && docker network prune -f",
    
    "// === 📊 MONITOREO ===": "",
    "monitor": "docker stats --format 'table {{.Name}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\\t{{.NetIO}}'",
    "check:services": "curl -s http://localhost:3000/api/v1/health || echo '❌ Backend' && curl -s http://localhost:8080 || echo '❌ Frontend' && curl -s http://localhost:6006 || echo '❌ Storybook'"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "dotenv": "^16.4.5"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "volta": {
    "node": "20.18.0",
    "npm": "10.8.2"
  }
}