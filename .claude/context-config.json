{
  "videoPlayerContext": {
    "description": "Contexto específico para debugging del VideoPlayer component",
    "components": {
      "VideoPlayer": {
        "filePath": "/frontend/app/src/Pages/VideoPlayer/VideoPlayer.jsx",
        "type": "complex-page-component",
        "dependencies": [
          "video.js",
          "videojs-contrib-quality-levels", 
          "jb-videojs-hls-quality-selector",
          "videojs-overlay",
          "videojs-hotkeys",
          "videojs-playlist",
          "videojs-playlist-ui"
        ],
        "mainFeatures": [
          "HLS video streaming",
          "Quality selector",
          "Playlist management (series episodes)",
          "Subtitles support",
          "Hotkeys (space, arrows, J/L)",
          "Analytics tracking",
          "Auto-advance episodes",
          "Player preferences persistence",
          "Picture-in-picture",
          "Custom overlay controls"
        ],
        "commonIssues": [
          {
            "issue": "Video no carga",
            "possibleCauses": ["CDN down", "Invalid hash", "Missing resolutions", "Network error"],
            "debugSteps": ["Check urlComplete", "Verify CDN connectivity", "Check browser console", "Test different resolution"]
          },
          {
            "issue": "Subtítulos no aparecen", 
            "possibleCauses": ["VTT file missing", "Text tracks not loaded", "Language mismatch"],
            "debugSteps": ["Check subsUrl", "Verify VTT file exists", "Test setupTextTracks function", "Check browser text track support"]
          },
          {
            "issue": "Auto-advance no funciona",
            "possibleCauses": ["Playlist plugin not loaded", "AutoAdvance delay not set", "Episode index mismatch"],
            "debugSteps": ["Check playlist configuration", "Verify currentEpisodeIndex", "Test autoadvance delay", "Check console logs for plugin errors"]
          },
          {
            "issue": "Calidad no cambia",
            "possibleCauses": ["HLS quality selector plugin missing", "Quality levels not detected", "VHS configuration issue"],
            "debugSteps": ["Check hlsQualitySelector plugin", "Verify quality levels", "Test VHS settings", "Check manifest file"]
          },
          {
            "issue": "Hotkeys no responden",
            "possibleCauses": ["Hotkeys plugin not loaded", "Event conflicts", "Focus issues"],
            "debugSteps": ["Check hotkeys configuration", "Verify key event handlers", "Test player focus", "Check for event conflicts"]
          },
          {
            "issue": "Cross-browser issues",
            "possibleCauses": ["Browser codec support", "Autoplay policies", "Fullscreen API differences"],
            "debugSteps": ["Check browser compatibility", "Test different codecs", "Verify autoplay policy", "Test fullscreen API"]
          }
        ],
        "keyMethods": [
          "initializePlayer() - línea 452: Setup principal del player",
          "setupTextTracks() - línea 164: Configuración de subtítulos", 
          "initializeAnalytics() - línea 199: Setup de métricas",
          "handleSkip() - línea 74: Navegación de video",
          "savePlayerPreferences() - línea 101: Persistencia de configuración",
          "loadPlayerPreferences() - línea 130: Carga de configuración guardada"
        ],
        "stateVariables": [
          "movieData - Información del contenido",
          "playlistData - Datos de la serie y episodios", 
          "currentEpisodeIndex - Índice del episodio actual",
          "currentQuality - Calidad de video actual",
          "isPlaying - Estado de reproducción",
          "bufferPercentage - Porcentaje de buffer",
          "loading - Estado de carga",
          "error - Errores del player"
        ],
        "urlParameters": [
          "movieId - Hash del video (requerido)",
          "resolutions - Resoluciones disponibles (requerido)",
          "type - movie|episode (opcional, default: movie)",
          "playlist - Key de playlist en sessionStorage (opcional)"
        ]
      }
    },
    "debuggingTemplates": {
      "videoLoadError": {
        "description": "Template para problemas de carga de video",
        "context": {
          "currentError": "{{error message}}",
          "urlComplete": "{{generated HLS URL}}",
          "movieData": "{{content metadata}}",
          "cdnStatus": "{{cdn connectivity}}",
          "browserInfo": "{{user agent and capabilities}}"
        }
      },
      "playlistIssues": {
        "description": "Template para problemas de playlist",
        "context": {
          "playlistData": "{{playlist structure}}",
          "currentEpisodeIndex": "{{episode index}}",
          "autoAdvanceConfig": "{{autoadvance settings}}",
          "pluginStatus": "{{playlist plugin status}}"
        }
      },
      "crossBrowserIssues": {
        "description": "Template para problemas cross-browser",
        "context": {
          "browser": "{{browser name and version}}",
          "codecSupport": "{{supported codecs}}",
          "autoplayPolicy": "{{autoplay restrictions}}",
          "videoJsVersion": "{{video.js version}}"
        }
      }
    }
  },
  
  "designSystemContext": {
    "description": "Sistema de diseño completo para crear componentes consistentes y reutilizables",
    "framework": {
      "type": "css-variables-system",
      "architecture": "atomic-design",
      "responsive": "mobile-first",
      "themes": "light-dark + custom-palettes",
      "accessibility": "wcag-compliant"
    },
    "coreTokens": {
      "colors": "Tailwind-inspired con sistema semántico completo",
      "spacing": "Scale de 8-point con variables centralizadas", 
      "typography": "Inter font + escala modular",
      "components": "Altura estándar 56px + padding/font consistentes",
      "elevation": "4-level shadow system",
      "motion": "3-speed transition system"
    },
    "componentsStandards": {
      "heights": "56px (lg) como estándar principal",
      "variants": "primary, secondary, danger, success, warning",
      "sizes": "xs, sm, md, lg, xl (con lg=56px)",
      "states": "default, hover, active, disabled, loading",
      "props": "Consistent API across all components"
    },
    "developmentWorkflow": {
      "creation": "1. Revisar similar → 2. Usar variables → 3. Storybook → 4. Test responsive",
      "debugging": "height-grid, debug-heights classes disponibles",
      "validation": "ESLint + Storybook + visual testing",
      "migration": "Guías step-by-step para proyectos nuevos/existentes"
    },
    "reuseStrategy": {
      "baseFramework": "App.css como foundation universal",
      "componentLibrary": "Atoms/Molecules/Organisms patterns",
      "themeSystem": "4 paletas predefinidas + custom themes",
      "projectTypes": "Streaming, Admin, E-commerce, Blog, SaaS ready"
    }
  },

  "streamingBackendContext": {
    "description": "Arquitectura completa del backend de streaming media con patrones y lógica de negocio",
    "architecture": {
      "pattern": "MVC (Model-View-Controller)",
      "stack": "Express.js + PostgreSQL + MinIO S3 + FFmpeg",
      "authentication": "JWT + Passport.js + Role-based access control"
    },
    "services": {
      "pattern": "Class-based services con métodos CRUD estándar",
      "entities": ["Movies", "Series", "Episodes", "Auth", "Users", "Categories"],
      "specialFeatures": [
        "Video transcoding pipeline con FFmpeg",
        "SHA256 hash para detección de duplicados", 
        "Procesamiento de imágenes de portada",
        "URLs temporales para VOD"
      ]
    },
    "dataLayer": {
      "database": "PostgreSQL con triggers de auditoría",
      "validation": "Joi schemas con validaciones personalizadas",
      "relationships": "Users->Roles, Movies/Series->Categories, Episodes->Series->Videos"
    },
    "fileProcessing": {
      "videos": "FFmpeg transcoding a múltiples calidades",
      "images": "Redimensionamiento y optimización",
      "storage": "MinIO S3 con buckets organizados",
      "duplicates": "SHA256 hash check antes de procesamiento"
    },
    "apiPatterns": {
      "routes": "/api/v1/{resource} con autenticación JWT",
      "middleware": "auth -> roles -> validation -> business logic",
      "responses": "Boom.js structured errors + success objects",
      "async": "Task IDs para operaciones largas como transcoding"
    },
    "commonIssues": [
      {
        "issue": "Transcoding failures",
        "causes": ["FFmpeg path", "Memory limits", "Codec support", "File corruption"],
        "solutions": ["Check ffmpegOptions.js", "Verify temp directories", "Test file integrity"]
      },
      {
        "issue": "Database connection errors", 
        "causes": ["Pool exhaustion", "Connection timeout", "Invalid credentials"],
        "solutions": ["Check postgresPool.js config", "Verify env vars", "Monitor active connections"]
      },
      {
        "issue": "S3 upload failures",
        "causes": ["Credentials", "Bucket permissions", "Network issues", "File size limits"],
        "solutions": ["Verify aws.js config", "Check MinIO server", "Test connectivity"]
      },
      {
        "issue": "JWT authentication errors",
        "causes": ["Token expiration", "Invalid secret", "Cookie issues", "CORS problems"],
        "solutions": ["Check jwtStrategy.js", "Verify config.jwtSecret", "Test CORS whitelist"]
      }
    ],
    "developmentPatterns": {
      "serviceCreation": "Class extends with constructor + pool connection",
      "routeStructure": "auth middleware -> validation -> async handler -> error handling",
      "errorHandling": "boom.js for HTTP errors + centralized error middleware",
      "validation": "Joi schemas with custom messages in Spanish"
    }
  }
}