// EmptyState.stories.jsx
import React from 'react';
import { EmptyState } from './EmptyState';
import { Button } from '../../atoms/Button/Button';
import './EmptyState.css';

export default {
  title: 'Components/Molecules/EmptyState',
  component: EmptyState,
  tags: ['autodocs'],
  parameters: {
    docs: {
      description: {
        component: `
# EmptyState Molecule

El componente **EmptyState** muestra un estado vac√≠o cuando no hay contenido que mostrar. 
Es fundamental para mejorar la UX cuando listas, b√∫squedas o filtros no devuelven resultados.

## üéØ Caracter√≠sticas principales

- **Flexible**: √çcono, t√≠tulo, descripci√≥n y acci√≥n personalizables
- **3 tama√±os**: SM, MD, LG para diferentes contextos
- **4 variantes**: Default, Info, Warning, Error
- **Accesible**: Sem√°ntica correcta y reducci√≥n de movimiento
- **Responsive**: Se adapta autom√°ticamente a pantallas m√≥viles
- **Integrado**: Usa Card como base para consistencia visual

## üîß Uso b√°sico

\`\`\`jsx
import { EmptyState } from './molecules/EmptyState';
import { Button } from './atoms/Button';

// B√°sico
<EmptyState 
  icon="üé¨"
  title="No hay pel√≠culas"
  description="No se encontraron pel√≠culas en esta categor√≠a"
/>

// Con acci√≥n
<EmptyState 
  icon="üîç"
  title="Sin resultados"
  description="Intenta con otros t√©rminos de b√∫squeda"
  action={<Button variant="primary">Limpiar filtros</Button>}
  variant="info"
  size="lg"
/>
\`\`\`

## üì± Casos de uso comunes

- **Listas vac√≠as**: Cuando no hay elementos que mostrar
- **B√∫squedas sin resultados**: Para t√©rminos que no devuelven datos
- **Filtros restrictivos**: Cuando los filtros eliminan todo el contenido
- **Estados de carga fallidos**: Cuando no se puede cargar el contenido
- **Funcionalidades nuevas**: Para explicar caracter√≠sticas pr√≥ximas

## ‚ôø Accesibilidad

- Usa estructura sem√°ntica con h3 y p
- Respeta prefers-reduced-motion
- Focus visible en acciones interactivas
- Colores con contraste adecuado
        `
      }
    }
  },
  argTypes: {
    // Contenido espec√≠fico
    icon: {
      name: '√çcono',
      description: 'Emoji, nombre de √≠cono Feather o elemento React',
      control: 'text'
    },
    title: {
      name: 'T√≠tulo',
      description: 'T√≠tulo principal del estado vac√≠o',
      control: 'text'
    },
    description: {
      name: 'Descripci√≥n',
      description: 'Texto descriptivo del estado',
      control: 'text'
    },
    action: {
      name: 'Acci√≥n',
      description: 'Elemento React para acci√≥n (bot√≥n, enlace)',
      control: false
    },
    
    // Props est√°ndar del sistema (5 tama√±os)
    size: {
      name: 'Tama√±o',
      description: 'Tama√±o del componente (sistema est√°ndar)',
      control: 'select',
      options: ['xs', 'sm', 'md', 'lg', 'xl']
    },
    variant: {
      name: 'Variante',
      description: 'Variante sem√°ntica (sistema est√°ndar)',
      control: 'select',
      options: ['primary', 'secondary', 'success', 'warning', 'danger', 'neutral']
    },
    rounded: {
      name: 'Rounded',
      description: 'Radio de borde del componente',
      control: 'select',
      options: ['sm', 'md', 'lg', 'xl', 'full']
    },
    disabled: {
      name: 'Deshabilitado',
      description: 'Deshabilita la interacci√≥n con el componente',
      control: 'boolean'
    },
    loading: {
      name: 'Cargando',
      description: 'Muestra estado de carga con overlay',
      control: 'boolean'
    }
  }
};

// ========== HISTORIA DEFAULT ==========
export const Default = {
  args: {
    icon: 'üì≠',
    title: 'No hay contenido',
    description: 'No se encontraron elementos para mostrar.',
    variant: 'neutral',
    size: 'md'
  }
};

// ========== TAMA√ëOS ==========
export const Sizes = () => (
  <div style={{
    display: 'grid',
    gap: 'var(--space-xl)',
    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
    padding: 'var(--space-md)'
  }}>
    <div>
      <h4 style={{ marginBottom: 'var(--space-md)', textAlign: 'center' }}>Peque√±o (SM)</h4>
      <EmptyState
        icon="üîç"
        title="Sin resultados"
        description="No se encontraron elementos."
        size="sm"
      />
    </div>
    
    <div>
      <h4 style={{ marginBottom: 'var(--space-md)', textAlign: 'center' }}>Mediano (MD)</h4>
      <EmptyState
        icon="üìù"
        title="Lista vac√≠a"
        description="A√∫n no has agregado elementos a esta lista."
        size="md"
      />
    </div>
    
    <div>
      <h4 style={{ marginBottom: 'var(--space-md)', textAlign: 'center' }}>Grande (LG)</h4>
      <EmptyState
        icon="üöÄ"
        title="¬°Comencemos!"
        description="Esta secci√≥n est√° lista para que agregues tu primer elemento."
        size="lg"
      />
    </div>
  </div>
);

Sizes.parameters = {
  docs: {
    description: {
      story: 'Tres tama√±os disponibles: SM para espacios compactos, MD para uso general, LG para p√°ginas principales.'
    }
  }
};

// ========== VARIANTES ==========
export const Variants = () => (
  <div style={{
    display: 'grid',
    gap: 'var(--space-xl)',
    gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
    padding: 'var(--space-md)'
  }}>
    <div>
      <h4 style={{ marginBottom: 'var(--space-md)', textAlign: 'center' }}>Default</h4>
      <EmptyState
        icon="üìÑ"
        title="Sin contenido"
        description="No hay elementos que mostrar."
        variant="default"
      />
    </div>
    
    <div>
      <h4 style={{ marginBottom: 'var(--space-md)', textAlign: 'center' }}>Info</h4>
      <EmptyState
        icon="üí°"
        title="Informaci√≥n"
        description="Esta funcionalidad estar√° disponible pr√≥ximamente."
        variant="info"
      />
    </div>
    
    <div>
      <h4 style={{ marginBottom: 'var(--space-md)', textAlign: 'center' }}>Warning</h4>
      <EmptyState
        icon="‚ö†Ô∏è"
        title="Filtros muy restrictivos"
        description="Los filtros actuales no devuelven resultados."
        variant="warning"
      />
    </div>
    
    <div>
      <h4 style={{ marginBottom: 'var(--space-md)', textAlign: 'center' }}>Error</h4>
      <EmptyState
        icon="‚ùå"
        title="Error de carga"
        description="No se pudo cargar el contenido solicitado."
        variant="error"
      />
    </div>
  </div>
);

Variants.parameters = {
  docs: {
    description: {
      story: 'Variantes visuales para diferentes contextos: default, info, warning y error.'
    }
  }
};

// ========== CON ACCIONES ==========
export const WithActions = () => (
  <div style={{
    display: 'grid',
    gap: 'var(--space-xl)',
    gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
    padding: 'var(--space-md)'
  }}>
    <EmptyState
      icon="üé¨"
      title="No hay pel√≠culas"
      description="No se encontraron pel√≠culas en esta categor√≠a."
      action={
        <Button variant="primary" size="md">
          Ver todas las categor√≠as
        </Button>
      }
    />
    
    <EmptyState
      icon="üîç"
      title="Sin resultados de b√∫squeda"
      description="Intenta con t√©rminos diferentes o m√°s generales."
      action={
        <div style={{ display: 'flex', gap: 'var(--space-sm)' }}>
          <Button variant="outline" size="sm">
            Limpiar b√∫squeda
          </Button>
          <Button variant="primary" size="sm">
            Ver populares
          </Button>
        </div>
      }
      variant="info"
    />
    
    <EmptyState
      icon="üì∫"
      title="Error de conexi√≥n"
      description="No se pudo cargar el contenido. Verifica tu conexi√≥n."
      action={
        <Button 
          variant="primary" 
          size="md"
          onClick={() => window.location.reload()}
        >
          Reintentar
        </Button>
      }
      variant="error"
      size="lg"
    />
  </div>
);

WithActions.parameters = {
  docs: {
    description: {
      story: 'EmptyState con botones de acci√≥n para guiar al usuario hacia la siguiente acci√≥n posible.'
    }
  }
};

// ========== CASOS DE USO PARA MAINPAGE ==========
export const MainPageUseCases = () => (
  <div style={{
    display: 'grid',
    gap: 'var(--space-xl)',
    padding: 'var(--space-md)'
  }}>
    <div>
      <h3 style={{ 
        marginBottom: 'var(--space-lg)', 
        color: 'var(--text-primary)',
        borderBottom: '1px solid var(--border-default)',
        paddingBottom: 'var(--space-sm)'
      }}>
        üéØ Casos de uso espec√≠ficos para MainPage
      </h3>
      
      <div style={{
        display: 'grid',
        gap: 'var(--space-xl)',
        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))'
      }}>
        {/* Caso 1: No hay pel√≠culas */}
        <EmptyState
          icon="üé¨"
          title="No hay pel√≠culas disponibles"
          description="El cat√°logo de pel√≠culas est√° siendo actualizado. Vuelve pronto para ver el nuevo contenido."
          action={
            <Button variant="primary">
              Ver series disponibles
            </Button>
          }
          size="md"
        />
        
        {/* Caso 2: B√∫squeda sin resultados */}
        <EmptyState
          icon="üîç"
          title="Sin resultados para tu b√∫squeda"
          description="No encontramos contenido que coincida con 'batman'. Intenta con otros t√©rminos."
          action={
            <div style={{ display: 'flex', gap: 'var(--space-sm)' }}>
              <Button variant="outline" size="sm">
                Limpiar b√∫squeda
              </Button>
              <Button variant="primary" size="sm">
                Ver populares
              </Button>
            </div>
          }
          variant="info"
        />
        
        {/* Caso 3: Categor√≠a vac√≠a */}
        <EmptyState
          icon="üè∑Ô∏è"
          title="Categor√≠a sin contenido"
          description="La categor√≠a 'Documentales' no tiene contenido disponible en este momento."
          action={
            <Button variant="primary">
              Explorar otras categor√≠as
            </Button>
          }
          variant="warning"
        />
        
        {/* Caso 4: Error de carga */}
        <EmptyState
          icon="‚ö†Ô∏è"
          title="Error al cargar contenido"
          description="Hubo un problema al cargar las pel√≠culas y series. Verifica tu conexi√≥n a internet."
          action={
            <Button variant="primary">
              Reintentar carga
            </Button>
          }
          variant="error"
        />
      </div>
    </div>
    
    <div style={{ 
      padding: 'var(--space-md)', 
      backgroundColor: 'var(--color-primary-light)', 
      borderRadius: 'var(--radius-md)',
      fontSize: 'var(--font-size-sm)',
      color: 'var(--text-primary)'
    }}>
      <strong>üí° Implementaci√≥n en MainPage:</strong>
      <br />
      Estos estados se mostrar√°n autom√°ticamente seg√∫n la situaci√≥n: sin pel√≠culas, sin series, b√∫squeda fallida, o error de API.
    </div>
  </div>
);

MainPageUseCases.parameters = {
  docs: {
    description: {
      story: 'Casos de uso espec√≠ficos de EmptyState para la p√°gina MainPage de la aplicaci√≥n de streaming.'
    }
  }
};

// ========== INTERACTIVIDAD ==========
export const Interactive = () => {
  const [currentState, setCurrentState] = React.useState('default');
  
  const states = {
    default: {
      icon: 'üì≠',
      title: 'Estado por defecto',
      description: 'Este es el estado vac√≠o est√°ndar.',
      variant: 'default'
    },
    search: {
      icon: 'üîç',
      title: 'Sin resultados',
      description: 'Tu b√∫squeda no devolvi√≥ resultados.',
      variant: 'info'
    },
    error: {
      icon: '‚ùå',
      title: 'Error de carga',
      description: 'Algo sali√≥ mal al cargar el contenido.',
      variant: 'error'
    },
    success: {
      icon: '‚úÖ',
      title: '¬°Todo listo!',
      description: 'La configuraci√≥n se complet√≥ exitosamente.',
      variant: 'info'
    }
  };
  
  return (
    <div style={{ padding: 'var(--space-md)' }}>
      <div style={{ 
        marginBottom: 'var(--space-lg)',
        display: 'flex',
        gap: 'var(--space-sm)',
        flexWrap: 'wrap'
      }}>
        {Object.keys(states).map(state => (
          <Button
            key={state}
            variant={currentState === state ? 'primary' : 'outline'}
            size="sm"
            onClick={() => setCurrentState(state)}
          >
            {state.charAt(0).toUpperCase() + state.slice(1)}
          </Button>
        ))}
      </div>
      
      <EmptyState
        icon={states[currentState].icon}
        title={states[currentState].title}
        description={states[currentState].description}
        variant={states[currentState].variant}
        action={
          <Button variant="primary">
            Acci√≥n para {currentState}
          </Button>
        }
        size="lg"
      />
    </div>
  );
};

Interactive.parameters = {
  docs: {
    description: {
      story: 'Demostraci√≥n interactiva de diferentes estados del EmptyState. Cambia entre estados para ver las variaciones.'
    }
  }
};

// ========== SISTEMA EST√ÅNDAR - NUEVAS FUNCIONALIDADES ==========

export const SystemStandardProps = () => (
  <div style={{ padding: 'var(--space-md)' }}>
    <h3 style={{ 
      marginBottom: 'var(--space-lg)', 
      color: 'var(--text-primary)',
      borderBottom: '1px solid var(--border-default)',
      paddingBottom: 'var(--space-sm)'
    }}>
      üé® Sistema Est√°ndar - Props Migradas
    </h3>
    
    <div style={{
      display: 'grid',
      gap: 'var(--space-xl)',
      gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))'
    }}>
      {/* Tama√±os est√°ndar (5) */}
      <div>
        <h4 style={{ marginBottom: 'var(--space-md)', color: 'var(--text-secondary)' }}>
          üìè 5 Tama√±os: XS ‚Üí XL
        </h4>
        <div style={{ display: 'flex', flexDirection: 'column', gap: 'var(--space-md)' }}>
          {['xs', 'sm', 'md', 'lg', 'xl'].map(size => (
            <EmptyState
              key={size}
              icon="üì¶"
              title={`Tama√±o ${size.toUpperCase()}`}
              description="Tokens autom√°ticos"
              size={size}
              variant="neutral"
            />
          ))}
        </div>
      </div>
      
      {/* Variantes est√°ndar (6) */}
      <div>
        <h4 style={{ marginBottom: 'var(--space-md)', color: 'var(--text-secondary)' }}>
          üé® 6 Variantes Sem√°nticas
        </h4>
        <div style={{ display: 'flex', flexDirection: 'column', gap: 'var(--space-md)' }}>
          {[
            { variant: 'primary', icon: 'üîµ' },
            { variant: 'secondary', icon: 'üü†' },
            { variant: 'success', icon: '‚úÖ' },
            { variant: 'warning', icon: '‚ö†Ô∏è' },
            { variant: 'danger', icon: '‚ùå' },
            { variant: 'neutral', icon: '‚ö™' }
          ].map(({ variant, icon }) => (
            <EmptyState
              key={variant}
              icon={icon}
              title={`${variant.charAt(0).toUpperCase() + variant.slice(1)}`}
              description="Colores sem√°nticos autom√°ticos"
              variant={variant}
              size="sm"
            />
          ))}
        </div>
      </div>
      
      {/* Estados especiales */}
      <div>
        <h4 style={{ marginBottom: 'var(--space-md)', color: 'var(--text-secondary)' }}>
          üîß Estados Loading/Disabled
        </h4>
        <div style={{ display: 'flex', flexDirection: 'column', gap: 'var(--space-md)' }}>
          <EmptyState
            icon="loader-2"
            title="Estado Loading"
            description="Con overlay autom√°tico"
            loading={true}
            action={<Button variant="primary">Cancelar</Button>}
          />
          <EmptyState
            icon="ban"
            title="Estado Disabled"
            description="Interacci√≥n deshabilitada"
            disabled={true}
            action={<Button variant="primary">No clickeable</Button>}
          />
        </div>
      </div>
    </div>
  </div>
);

SystemStandardProps.parameters = {
  docs: {
    description: {
      story: 'üéØ **MIGRACI√ìN COMPLETA** - EmptyState ahora usa el sistema de dise√±o est√°ndar con 5 tama√±os, 6 variantes sem√°nticas, tokens autom√°ticos, sistema de iconos integrado y estados loading/disabled.'
    }
  }
};

// ========== BACKWARD COMPATIBILITY ==========
export const BackwardCompatibility = () => (
  <div style={{ padding: 'var(--space-md)' }}>
    <h3 style={{ 
      marginBottom: 'var(--space-lg)', 
      color: 'var(--text-primary)',
      borderBottom: '1px solid var(--border-default)',
      paddingBottom: 'var(--space-sm)'
    }}>
      üîÑ Backward Compatibility - Variantes Legacy
    </h3>
    
    <div style={{
      display: 'grid',
      gap: 'var(--space-xl)',
      gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))'
    }}>
      {/* Variantes legacy con warnings */}
      <div>
        <h4 style={{ marginBottom: 'var(--space-md)', color: 'var(--text-secondary)' }}>
          ‚ö†Ô∏è Props Legacy (con warnings)
        </h4>
        <div style={{ display: 'flex', flexDirection: 'column', gap: 'var(--space-md)' }}>
          <EmptyState
            icon="üìÑ"
            title="variant='default'"
            description="Se mapea autom√°ticamente a 'neutral'"
            variant="default" // Legacy
          />
          <EmptyState
            icon="üí°"
            title="variant='info'"
            description="Se mapea autom√°ticamente a 'primary'"
            variant="info" // Legacy
          />
          <EmptyState
            icon="‚ùå"
            title="variant='error'"
            description="Se mapea autom√°ticamente a 'danger'"
            variant="error" // Legacy
          />
        </div>
      </div>
      
      <div>
        <h4 style={{ marginBottom: 'var(--space-md)', color: 'var(--text-secondary)' }}>
          ‚úÖ Props Nuevas Recomendadas
        </h4>
        <div style={{ display: 'flex', flexDirection: 'column', gap: 'var(--space-md)' }}>
          <EmptyState
            icon="‚ö™"
            title="variant='neutral'"
            description="Nueva API est√°ndar"
            variant="neutral"
          />
          <EmptyState
            icon="üîµ"
            title="variant='primary'"
            description="Nueva API est√°ndar"
            variant="primary"
          />
          <EmptyState
            icon="üî¥"
            title="variant='danger'"
            description="Nueva API est√°ndar"
            variant="danger"
          />
        </div>
      </div>
    </div>
    
    <div style={{ 
      padding: 'var(--space-md)', 
      backgroundColor: 'var(--color-warning-light)', 
      borderRadius: 'var(--radius-md)',
      marginTop: 'var(--space-lg)',
      fontSize: 'var(--font-size-sm)',
      color: 'var(--text-primary)'
    }}>
      <strong>üí° Desarrollo:</strong> Abre DevTools Console para ver deprecation warnings de variantes legacy. 
      <br />
      <strong>üöÄ Migraci√≥n:</strong> Usa las 6 variantes est√°ndar: primary, secondary, success, warning, danger, neutral.
    </div>
  </div>
);

BackwardCompatibility.parameters = {
  docs: {
    description: {
      story: 'üõ°Ô∏è **CERO BREAKING CHANGES** - Las props legacy funcionan perfectamente con mapping autom√°tico y deprecation warnings informativos en desarrollo.'
    }
  }
};