// Accordion.stories.jsx - Documentaci√≥n y ejemplos del componente Accordion
// üéØ MIGRADO AL SISTEMA EST√ÅNDAR - V2.0 ‚úÖ
import { Accordion, AccordionItem } from './Accordion';
// import { Icon } from '../atoms/Icon/Icon'; // Removido - no usado

export default {
  title: 'Components/Molecules/Accordion',
  component: Accordion,
  parameters: {
    docs: {
      description: {
        component: `
## Accordion - Componente de Acorde√≥n üéØ MIGRADO V2.0

Sistema de acorde√≥n completo integrado al sistema de dise√±o est√°ndar.

### üöÄ Nuevas Caracter√≠sticas V2.0
- ‚úÖ **Sistema est√°ndar integrado**: size, variant, rounded, loading, disabled
- ‚úÖ **Tokens autom√°ticos**: espaciado, colores y tipograf√≠a din√°micos
- ‚úÖ **6 variantes sem√°nticas**: primary, secondary, success, warning, danger, neutral
- ‚úÖ **5 tama√±os est√°ndar**: xs, sm, md, lg, xl
- ‚úÖ **Estados loading**: spinner y overlay autom√°ticos
- ‚úÖ **Backward compatibility**: soporte legacy con warnings

### Casos de Uso
- **FAQ sections** en p√°ginas de ayuda
- **Series Detail** con informaci√≥n adicional colapsable  
- **Admin Panel** con secciones de configuraci√≥n avanzada
- **Settings Page** para agrupar opciones relacionadas

### Caracter√≠sticas Conservadas
- ‚úÖ Single/multiple items abiertos
- ‚úÖ Animaciones smooth con CSS transitions  
- ‚úÖ Iconos personalizables
- ‚úÖ Contenido anidado din√°mico
- ‚úÖ Keyboard navigation completa
- ‚úÖ Accesibilidad WCAG 2.1 AA
        `
      }
    }
  },
  argTypes: {
    // Props del sistema est√°ndar
    size: {
      control: 'select', 
      options: ['xs', 'sm', 'md', 'lg', 'xl'],
      description: 'Tama√±o del acorde√≥n (sistema est√°ndar)'
    },
    variant: {
      control: 'select',
      options: ['primary', 'secondary', 'success', 'warning', 'danger', 'neutral'],
      description: 'Variante sem√°ntica del acorde√≥n (sistema est√°ndar)'
    },
    rounded: {
      control: 'select',
      options: ['sm', 'md', 'lg', 'xl', 'full'],
      description: 'Radio de bordes (sistema est√°ndar)'
    },
    disabled: {
      control: 'boolean',
      description: 'Deshabilita todo el acorde√≥n'
    },
    loading: {
      control: 'boolean',
      description: 'Muestra estado de carga con spinner'
    },
    // Props espec√≠ficas de Accordion
    allowMultiple: {
      control: 'boolean',
      description: 'Permite m√∫ltiples items abiertos simult√°neamente'
    },
    animated: {
      control: 'boolean',
      description: 'Habilita animaciones de expand/collapse'
    },
    expandIcon: {
      control: 'text',
      description: 'Icono para expandir (Feather icon name)'
    },
    collapseIcon: {
      control: 'text',
      description: 'Icono para colapsar (Feather icon name)'
    }
  }
};

// Datos de ejemplo para las stories
const sampleFAQItems = [
  {
    id: 'password',
    title: '¬øC√≥mo cambio mi contrase√±a?',
    icon: 'lock',
    content: (
      <div>
        <p>Para cambiar tu contrase√±a:</p>
        <ol>
          <li>Ve a Configuraci√≥n ‚Üí Seguridad</li>
          <li>Haz clic en &ldquo;Cambiar contrase√±a&rdquo;</li>
          <li>Ingresa tu contrase√±a actual</li>
          <li>Ingresa tu nueva contrase√±a</li>
          <li>Confirma los cambios</li>
        </ol>
        <p><strong>Recomendaci√≥n:</strong> Usa una contrase√±a fuerte con al menos 8 caracteres.</p>
      </div>
    )
  },
  {
    id: 'subscription', 
    title: '¬øC√≥mo cancelo mi suscripci√≥n?',
    subtitle: 'Gesti√≥n de cuenta',
    icon: 'user',
    badge: 'Popular',
    content: (
      <div>
        <p>Para cancelar tu suscripci√≥n:</p>
        <ul>
          <li>Accede a tu perfil de usuario</li>
          <li>Ve a &ldquo;Gestionar suscripci√≥n&rdquo;</li>
          <li>Selecciona &ldquo;Cancelar suscripci√≥n&rdquo;</li>
          <li>Confirma la cancelaci√≥n</li>
        </ul>
        <p><em>Nota: Mantendr√°s acceso hasta el final del per√≠odo de facturaci√≥n.</em></p>
      </div>
    )
  },
  {
    id: 'streaming',
    title: '¬øPor qu√© el video no se reproduce?',
    icon: 'video',
    badge: 3,
    content: (
      <div>
        <p>Posibles causas y soluciones:</p>
        <ul>
          <li><strong>Conexi√≥n lenta:</strong> Verifica tu velocidad de internet</li>
          <li><strong>Browser obsoleto:</strong> Actualiza tu navegador</li>
          <li><strong>Ad blockers:</strong> Desactiva extensiones que bloqueen contenido</li>
          <li><strong>Cach√©:</strong> Limpia el cach√© del navegador</li>
        </ul>
        <p>Si el problema persiste, contacta soporte t√©cnico.</p>
      </div>
    )
  },
  {
    id: 'devices',
    title: '¬øEn cu√°ntos dispositivos puedo ver contenido?',
    icon: 'monitor',
    disabled: true,
    content: (
      <div>
        <p>El n√∫mero de dispositivos depende de tu plan:</p>
        <ul>
          <li><strong>Plan B√°sico:</strong> 1 dispositivo</li>
          <li><strong>Plan Est√°ndar:</strong> 2 dispositivos</li>
          <li><strong>Plan Premium:</strong> 4 dispositivos</li>
        </ul>
      </div>
    )
  }
];

const configurationItems = [
  {
    id: 'general',
    title: 'Configuraci√≥n General',
    icon: 'settings',
    content: (
      <div>
        <h4>Opciones generales del sistema</h4>
        <p>Personaliza la experiencia b√°sica de la aplicaci√≥n.</p>
        <ul>
          <li>Idioma de la interfaz</li>
          <li>Zona horaria</li>
          <li>Formato de fecha</li>
          <li>Tema visual</li>
        </ul>
      </div>
    )
  },
  {
    id: 'privacy',
    title: 'Privacidad y Datos',
    icon: 'shield',
    badge: 'Nuevo',
    content: (
      <div>
        <h4>Gesti√≥n de privacidad</h4>
        <p>Controla c√≥mo se manejan tus datos personales.</p>
        <ul>
          <li>Configuraci√≥n de cookies</li>
          <li>Datos de navegaci√≥n</li>
          <li>Historial de visualizaci√≥n</li>
          <li>Compartir datos de uso</li>
        </ul>
      </div>
    )
  },
  {
    id: 'notifications',
    title: 'Notificaciones',
    icon: 'bell',
    content: (
      <div>
        <h4>Preferencias de notificaciones</h4>
        <p>Decide qu√© notificaciones quieres recibir.</p>
        <ul>
          <li>Nuevos episodios</li>
          <li>Recomendaciones</li>
          <li>Actualizaciones del sistema</li>
          <li>Recordatorios de pago</li>
        </ul>
      </div>
    )
  }
];

// Template base
const Template = (args) => <Accordion {...args} />;

// Story: Ejemplo b√°sico
export const Default = Template.bind({});
Default.args = {
  items: sampleFAQItems.slice(0, 2),
  variant: 'neutral', // Nuevo sistema est√°ndar
  size: 'md',
  rounded: 'md',
  allowMultiple: false,
  animated: true
};

// Story: FAQ Completo
export const FAQExample = Template.bind({});
FAQExample.args = {
  items: sampleFAQItems,
  variant: 'primary', // Mapeado de separated -> primary
  size: 'md',
  rounded: 'md',
  allowMultiple: true,
  defaultOpenItems: ['password'],
  animated: true
};
FAQExample.parameters = {
  docs: {
    description: {
      story: 'Ejemplo completo de FAQ con m√∫ltiples items, iconos, badges y estados disabled.'
    }
  }
};

// Story: Sistema de variantes est√°ndar
export const SystemStandardVariants = () => (
  <div style={{ display: 'flex', flexDirection: 'column', gap: '2rem' }}>
    <div>
      <h3>Primary - Acorde√≥n principal/importante</h3>
      <Accordion items={sampleFAQItems.slice(0, 2)} variant="primary" size="md" />
    </div>
    
    <div>
      <h3>Secondary - Acorde√≥n secundario</h3>
      <Accordion items={sampleFAQItems.slice(0, 2)} variant="secondary" size="md" />
    </div>
    
    <div>
      <h3>Success - Estado positivo/completado</h3>
      <Accordion items={sampleFAQItems.slice(0, 2)} variant="success" size="md" />
    </div>
    
    <div>
      <h3>Warning - Advertencias/precauci√≥n</h3>
      <Accordion items={sampleFAQItems.slice(0, 2)} variant="warning" size="md" />
    </div>
    
    <div>
      <h3>Danger - Errores/cr√≠tico</h3>
      <Accordion items={sampleFAQItems.slice(0, 2)} variant="danger" size="md" />
    </div>
    
    <div>
      <h3>Neutral - Por defecto/minimalista</h3>
      <Accordion items={sampleFAQItems.slice(0, 2)} variant="neutral" size="md" />
    </div>
  </div>
);
SystemStandardVariants.parameters = {
  docs: {
    description: {
      story: 'Las 6 variantes sem√°nticas del sistema est√°ndar con significado especifico para cada caso de uso.'
    }
  }
};

// Story: Tama√±os est√°ndar del sistema
export const SystemStandardSizes = () => (
  <div style={{ display: 'flex', flexDirection: 'column', gap: '2rem' }}>
    <div>
      <h3>Extra Small (xs)</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} size="xs" variant="neutral" />
    </div>
    
    <div>
      <h3>Small (sm)</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} size="sm" variant="neutral" />
    </div>
    
    <div>
      <h3>Medium (md) - Por defecto</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} size="md" variant="neutral" />
    </div>
    
    <div>
      <h3>Large (lg)</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} size="lg" variant="neutral" />
    </div>
    
    <div>
      <h3>Extra Large (xl)</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} size="xl" variant="neutral" />
    </div>
  </div>
);
SystemStandardSizes.parameters = {
  docs: {
    description: {
      story: 'Los 5 tama√±os est√°ndar del sistema de dise√±o con espaciado y tipograf√≠a autom√°ticos.'
    }
  }
};

// Story: Configuraci√≥n de Admin Panel
export const AdminConfiguration = Template.bind({});
AdminConfiguration.args = {
  items: configurationItems,
  variant: 'primary', // Mapeado de bordered -> primary
  size: 'md',
  rounded: 'md',
  allowMultiple: true,
  defaultOpenItems: ['general'],
  animated: true
};
AdminConfiguration.parameters = {
  docs: {
    description: {
      story: 'Ejemplo de uso en panel de administraci√≥n con secciones de configuraci√≥n.'
    }
  }
};

// Story: Estados del sistema est√°ndar
export const SystemStandardStates = () => (
  <div style={{ display: 'flex', flexDirection: 'column', gap: '3rem' }}>
    <div>
      <h3>Estado Normal - Interactivo</h3>
      <Accordion 
        items={sampleFAQItems.slice(0, 2)} 
        variant="primary" 
        size="md" 
        defaultOpenItems={['password']}
      />
    </div>
    
    <div>
      <h3>Estado Disabled - No interactivo</h3>
      <Accordion 
        items={sampleFAQItems.slice(0, 2)} 
        variant="primary" 
        size="md" 
        disabled={true}
        defaultOpenItems={['password']}
      />
    </div>
    
    <div>
      <h3>Estado Loading - Con spinner</h3>
      <Accordion 
        items={sampleFAQItems.slice(0, 2)} 
        variant="primary" 
        size="md" 
        loading={true}
      />
    </div>
    
    <div>
      <h3>Sin animaciones - Para accesibilidad</h3>
      <Accordion 
        items={sampleFAQItems.slice(0, 2)} 
        variant="primary" 
        size="md" 
        animated={false}
        defaultOpenItems={['password']}
      />
    </div>
  </div>
);
SystemStandardStates.parameters = {
  docs: {
    description: {
      story: 'Estados est√°ndar del sistema: normal, disabled, loading y sin animaciones.'
    }
  }
};

// Story: Single Item (AccordionItem)
export const SingleItem = () => (
  <AccordionItem
    title="¬øQu√© es el streaming?"
    subtitle="Conceptos b√°sicos"
    icon="video"
    defaultOpen={true}
    content={
      <div>
        <p>El streaming es una tecnolog√≠a que permite reproducir contenido multimedia en tiempo real sin necesidad de descargarlo completamente.</p>
        <h4>Ventajas del streaming:</h4>
        <ul>
          <li>Reproducci√≥n instant√°nea</li>
          <li>No ocupa espacio en el dispositivo</li>
          <li>Acceso a gran variedad de contenido</li>
          <li>Disponible en m√∫ltiples dispositivos</li>
        </ul>
      </div>
    }
  />
);
SingleItem.parameters = {
  docs: {
    description: {
      story: 'Componente AccordionItem para uso individual sin necesidad del array completo.'
    }
  }
};

// Story: Sin animaciones
export const NoAnimation = Template.bind({});
NoAnimation.args = {
  items: sampleFAQItems.slice(0, 2),
  variant: 'neutral', // Actualizado al sistema est√°ndar
  size: 'md',
  rounded: 'md',
  animated: false,
  defaultOpenItems: ['password']
};
NoAnimation.parameters = {
  docs: {
    description: {
      story: 'Acorde√≥n sin animaciones para usuarios que prefieren reducir el movimiento o para mejor rendimiento.'
    }
  }
};

// Story: Estado disabled
export const DisabledState = Template.bind({});
DisabledState.args = {
  items: sampleFAQItems.slice(0, 2),
  variant: 'primary',
  size: 'md',
  rounded: 'md',
  disabled: true,
  defaultOpenItems: ['password']
};
DisabledState.parameters = {
  docs: {
    description: {
      story: 'Estado disabled del acorde√≥n completo.'
    }
  }
};

// Story: Iconos personalizados
export const CustomIcons = Template.bind({});
CustomIcons.args = {
  items: sampleFAQItems.slice(0, 2),
  expandIcon: 'plus',
  collapseIcon: 'minus',
  variant: 'secondary', // Mapeado de separated -> secondary
  size: 'md',
  rounded: 'md'
};
CustomIcons.parameters = {
  docs: {
    description: {
      story: 'Acorde√≥n con iconos personalizados para expand/collapse.'
    }
  }
};

// Story: Contenido din√°mico
export const DynamicContent = Template.bind({});
DynamicContent.args = {
  items: [
    {
      id: 'stats',
      title: 'Estad√≠sticas de Usuario',
      icon: 'trending',
      content: (item, isOpen) => (
        <div>
          <p>Estado: {isOpen ? 'Expandido' : 'Colapsado'}</p>
          <p>Tiempo de carga: {new Date().toLocaleTimeString()}</p>
          <div style={{ 
            padding: '1rem', 
            background: 'var(--color-bg-secondary)', 
            borderRadius: '8px',
            marginTop: '0.5rem'
          }}>
            <h4>Datos en tiempo real:</h4>
            <ul>
              <li>Videos vistos: {Math.floor(Math.random() * 100)}</li>
              <li>Tiempo total: {Math.floor(Math.random() * 500)} horas</li>
              <li>G√©nero favorito: Acci√≥n</li>
            </ul>
          </div>
        </div>
      )
    }
  ],
  variant: 'secondary',
  size: 'md',
  defaultOpenItems: ['stats']
};
DynamicContent.parameters = {
  docs: {
    description: {
      story: 'Acorde√≥n con contenido din√°mico que recibe props del item y estado de apertura.'
    }
  }
};

// Story: Backward Compatibility
export const BackwardCompatibility = () => (
  <div style={{ display: 'flex', flexDirection: 'column', gap: '2rem' }}>
    <div>
      <h3>Legacy: variant=&ldquo;default&rdquo; (funciona, con warning)</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} variant="default" size="md" />
    </div>
    
    <div>
      <h3>Legacy: variant=&ldquo;bordered&rdquo; (funciona, con warning)</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} variant="bordered" size="md" />
    </div>
    
    <div>
      <h3>Legacy: variant=&ldquo;separated&rdquo; (funciona, con warning)</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} variant="separated" size="md" />
    </div>
    
    <div>
      <h3>Legacy: variant=&ldquo;minimal&rdquo; (funciona, con warning)</h3>
      <Accordion items={sampleFAQItems.slice(0, 1)} variant="minimal" size="md" />
    </div>
  </div>
);
BackwardCompatibility.parameters = {
  docs: {
    description: {
      story: 'Demostraci√≥n de backward compatibility con props legacy. Verifica la consola para warnings de deprecaci√≥n.'
    }
  }
};